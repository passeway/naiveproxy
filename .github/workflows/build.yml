name: Daily Check and Build Caddy

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-and-tag:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.set-tag.outputs.should_build }}
      latest_tag: ${{ steps.set-tag.outputs.latest_tag }}
      clean_tag: ${{ steps.set-tag.outputs.clean_tag }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Get latest Caddy version
      id: get-latest
      run: |
        latest=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r .tag_name)
        echo "latest_tag=$latest" >> $GITHUB_OUTPUT

    - name: Get current latest tag in this repo
      id: get-current
      run: |
        current=$(git tag | sort -V | tail -n1)
        echo "current_tag=$current" >> $GITHUB_OUTPUT

    - name: Compare and tag if needed
      id: set-tag
      run: |
        latest="${{ steps.get-latest.outputs.latest_tag }}"
        current="${{ steps.get-current.outputs.current_tag }}"

        echo "Latest tag: $latest"
        echo "Current tag: $current"

        if [ "$latest" != "$current" ]; then
          git config user.name github-actions
          git config user.email github-actions@users.noreply.github.com
          git tag "$latest"
          git push origin "$latest"
          echo "latest_tag=$latest" >> $GITHUB_OUTPUT
          echo "clean_tag=${latest#v}" >> $GITHUB_OUTPUT
          echo "should_build=true" >> $GITHUB_OUTPUT
        else
          echo "should_build=false" >> $GITHUB_OUTPUT
        fi

  build:
    needs: check-and-tag
    if: needs.check-and-tag.outputs.should_build == 'true'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            goarch: amd64
          - arch: arm64
            goarch: arm64

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: stable
        cache: false

    - name: Install xcaddy
      run: |
        go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Build Caddy (${{ matrix.arch }})
      env:
        GOOS: linux
        GOARCH: ${{ matrix.goarch }}
      run: |
        echo "Building for $GOARCH"
        xcaddy build ${{ needs.check-and-tag.outputs.latest_tag }} \
          --with github.com/caddyserver/forwardproxy@caddy2=github.com/klzgrad/forwardproxy@naive
        test -f caddy && chmod +x caddy || (echo "Caddy build failed" && exit 1)
        tar -czvf caddy_${{ needs.check-and-tag.outputs.clean_tag }}_linux_${{ matrix.arch }}.tar.gz caddy

    - name: Generate checksum
      run: |
        sha256sum caddy_${{ needs.check-and-tag.outputs.clean_tag }}_linux_${{ matrix.arch }}.tar.gz > caddy_${{ needs.check-and-tag.outputs.clean_tag }}_linux_${{ matrix.arch }}.sha256

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.check-and-tag.outputs.latest_tag }}
        name: ${{ needs.check-and-tag.outputs.latest_tag }}
        body: |
          ### caddy-forwardproxy-na√Øve
        files: |
          caddy_${{ needs.check-and-tag.outputs.clean_tag }}_linux_${{ matrix.arch }}.tar.gz
          caddy_${{ needs.check-and-tag.outputs.clean_tag }}_linux_${{ matrix.arch }}.sha256